2024-09-25 05:00:29.8793 INFO Starting heuristic learning for classes: Definitions.Database
2024-09-25 05:00:29.8883 INFO Trying out AddDevice
2024-09-25 05:00:29.9699 TRACE Verifying the body of the following method:
static method synthesized(argument_1_0_0: int, receiver: Database)
    modifies receiver {assume true && receiver.IsValid() && argument_1_0_0 !in receiver.D;
receiver.AddDevice(argument_1_0_0);
assert {:keepAssertion} false;}
2024-09-25 05:00:29.9699 TRACE Verifying the body of the following method (literal):
 static method synthesized(argument_1_0_0: int, receiver: Database)
      modifies receiver
    {
      assume true && receiver.IsValid() && argument_1_0_0 !in receiver.D;
      receiver.AddDevice(argument_1_0_0);
      assert {:keepAssertion} false;
    }
2024-09-25 05:00:31.1172 TRACE Verifying the body of the following method:
static method synthesized(formal_4_6_0: bool, argument_1_0_0: int, receiver: Database, formal_0_0_0: int)
    modifies receiver {assume !(receiver == null);
assume receiver.CS == {};
assume receiver.C == {};
assume receiver.IsValid.requires();
assume true == receiver.IsValid();
receiver.AddDevice(14);
assert {:keepAssertion} !false;}
2024-09-25 05:00:31.1172 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_4_6_0: bool, argument_1_0_0: int, receiver: Database, formal_0_0_0: int)
      modifies receiver
    {
      assume {:formal} formal_0_0_0 == 14;
      assume {:attribute 7} argument_1_0_0 == formal_0_0_0;
      assume {:formal} formal_4_6_0 == true;
      assume !(receiver == null);
      assume receiver.CS == {};
      assume receiver.C == {};
      assume receiver.IsValid.requires();
      assume formal_4_6_0 == receiver.IsValid();
      receiver.AddDevice(argument_1_0_0);
      assert {:keepAssertion} !false;
    }
2024-09-25 05:00:31.4330 INFO Trying out DiffDevice
2024-09-25 05:00:31.4371 TRACE Verifying the body of the following method:
static method synthesized(argument_2_0_0: int, receiver: Database)
    modifies  {assume true && exists v: int {:trigger v in receiver.D} :: v in receiver.D && v != argument_2_0_0;
var _ := receiver.DiffDevice(argument_2_0_0);
assert {:keepAssertion} false;}
2024-09-25 05:00:31.4371 TRACE Verifying the body of the following method (literal):
 static method synthesized(argument_2_0_0: int, receiver: Database)
    {
      assume true && exists v: int {:trigger v in receiver.D} :: v in receiver.D && v != argument_2_0_0;
      var _ := receiver.DiffDevice(argument_2_0_0);
      assert {:keepAssertion} false;
    }
2024-09-25 05:00:31.7124 TRACE Verifying the body of the following method:
static method synthesized(formal_1_11_0: int, formal_2_13_0: int, formal_2_13_1: int, formal_2_13_2: int, formal_3_15_0: int, formal_4_17_0: int, argument_2_0_0: int, receiver: Database, formal_0_8_0: int)
    modifies  {assume !(receiver == null);
assume 18 in receiver.D;
assume receiver.D == {17, 15, 18};
assume 15 in receiver.D;
assume 17 in receiver.D;
var _ := receiver.DiffDevice(16);
assert {:keepAssertion} !false;}
2024-09-25 05:00:31.7124 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_1_11_0: int, formal_2_13_0: int, formal_2_13_1: int, formal_2_13_2: int, formal_3_15_0: int, formal_4_17_0: int, argument_2_0_0: int, receiver: Database, formal_0_8_0: int)
    {
      assume {:formal} formal_0_8_0 == 16;
      assume {:attribute 14} argument_2_0_0 == formal_0_8_0;
      assume {:formal} formal_1_11_0 == 18;
      assume {:formal} formal_2_13_0 == 17;
      assume {:formal} formal_2_13_1 == 15;
      assume {:formal} formal_2_13_2 == 18;
      assume {:formal} formal_3_15_0 == 15;
      assume {:formal} formal_4_17_0 == 17;
      assume !(receiver == null);
      assume formal_1_11_0 in receiver.D;
      assume receiver.D == {formal_2_13_0, formal_2_13_1, formal_2_13_2};
      assume formal_3_15_0 in receiver.D;
      assume formal_4_17_0 in receiver.D;
      var _ := receiver.DiffDevice(argument_2_0_0);
      assert {:keepAssertion} !false;
    }
2024-09-25 05:00:32.0117 INFO New state is this.D == {17, 15, 18}, Â¬(receiver == null), 15 in this.D, 17 in this.D, 18 in this.D
2024-09-25 05:00:32.0117 INFO Trying out AddConnection
2024-09-25 05:00:32.0117 TRACE Verifying the body of the following method:
static method synthesized(argument_3_0_0: (int, int), receiver: Database)
    modifies receiver {assume true && receiver.IsValid() && argument_3_0_0.0 in receiver.D && argument_3_0_0.1 in receiver.D;
receiver.AddConnection(argument_3_0_0);
assert {:keepAssertion} false;}
2024-09-25 05:00:32.0117 TRACE Verifying the body of the following method (literal):
 static method synthesized(argument_3_0_0: (int, int), receiver: Database)
      modifies receiver
    {
      assume true && receiver.IsValid() && argument_3_0_0.0 in receiver.D && argument_3_0_0.1 in receiver.D;
      receiver.AddConnection(argument_3_0_0);
      assert {:keepAssertion} false;
    }
2024-09-25 05:00:32.3180 TRACE Verifying the body of the following method:
static method synthesized(formal_3_6_0: bool, argument_3_0_0: (int, int), receiver: Database)
    modifies receiver {assume !(receiver == null);
assume receiver.C == {};
assume receiver.IsValid.requires();

********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
****************** SKIPPING 1981 LINES OF LOGS TO SAVE DISK SPACE **************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************

var _ := receiver.DiffDevice(argument_127_0_0);
assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());}
2024-09-25 05:01:02.5673 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_7_0: bool, argument_127_0_0: int, receiver: Database)
    {
      assume formal_0_7_0 == receiver.IsValid();
      assume true && exists v: int {:trigger v in receiver.D} :: v in receiver.D && v != argument_127_0_0;
      var _ := receiver.DiffDevice(argument_127_0_0);
      assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());
    }
2024-09-25 05:01:02.8123 TRACE Verifying the body of the following method:
static method synthesized(formal_0_7_0: bool, argument_128_0_0: (int, int), receiver: Database)
    modifies receiver {assume !(formal_0_7_0 == receiver.IsValid());
assume true && receiver.IsValid() && argument_128_0_0.0 in receiver.D && argument_128_0_0.1 in receiver.D;
receiver.AddConnection(argument_128_0_0);
assert {:keepAssertion} !(formal_0_7_0 == receiver.IsValid());}
2024-09-25 05:01:02.8123 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_7_0: bool, argument_128_0_0: (int, int), receiver: Database)
      modifies receiver
    {
      assume !(formal_0_7_0 == receiver.IsValid());
      assume true && receiver.IsValid() && argument_128_0_0.0 in receiver.D && argument_128_0_0.1 in receiver.D;
      receiver.AddConnection(argument_128_0_0);
      assert {:keepAssertion} !(formal_0_7_0 == receiver.IsValid());
    }
2024-09-25 05:01:03.0319 TRACE Verifying the body of the following method:
static method synthesized(formal_0_7_0: bool, argument_129_0_0: (int, int), receiver: Database)
    modifies receiver {assume formal_0_7_0 == receiver.IsValid();
assume true && receiver.IsValid() && argument_129_0_0.0 in receiver.D && argument_129_0_0.1 in receiver.D;
receiver.AddConnection(argument_129_0_0);
assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());}
2024-09-25 05:01:03.0319 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_7_0: bool, argument_129_0_0: (int, int), receiver: Database)
      modifies receiver
    {
      assume formal_0_7_0 == receiver.IsValid();
      assume true && receiver.IsValid() && argument_129_0_0.0 in receiver.D && argument_129_0_0.1 in receiver.D;
      receiver.AddConnection(argument_129_0_0);
      assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());
    }
2024-09-25 05:01:03.2363 TRACE Verifying the body of the following method:
static method synthesized(formal_0_7_0: bool, argument_130_0_0: int, receiver: Database)
    modifies receiver {assume !(formal_0_7_0 == receiver.IsValid());
assume true && receiver.IsValid() && argument_130_0_0 in receiver.D;
receiver.MakeCentral(argument_130_0_0);
assert {:keepAssertion} !(formal_0_7_0 == receiver.IsValid());}
2024-09-25 05:01:03.2363 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_7_0: bool, argument_130_0_0: int, receiver: Database)
      modifies receiver
    {
      assume !(formal_0_7_0 == receiver.IsValid());
      assume true && receiver.IsValid() && argument_130_0_0 in receiver.D;
      receiver.MakeCentral(argument_130_0_0);
      assert {:keepAssertion} !(formal_0_7_0 == receiver.IsValid());
    }
2024-09-25 05:01:03.4485 TRACE Verifying the body of the following method:
static method synthesized(formal_0_7_0: bool, argument_131_0_0: int, receiver: Database)
    modifies receiver {assume formal_0_7_0 == receiver.IsValid();
assume true && receiver.IsValid() && argument_131_0_0 in receiver.D;
receiver.MakeCentral(argument_131_0_0);
assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());}
2024-09-25 05:01:03.4485 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_7_0: bool, argument_131_0_0: int, receiver: Database)
      modifies receiver
    {
      assume formal_0_7_0 == receiver.IsValid();
      assume true && receiver.IsValid() && argument_131_0_0 in receiver.D;
      receiver.MakeCentral(argument_131_0_0);
      assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());
    }
2024-09-25 05:01:03.6931 TRACE Verifying the body of the following method:
static method synthesized(formal_0_7_0: bool, argument_132_0_0: int, argument_132_0_1: int, receiver: Database)
    modifies receiver {assume !(formal_0_7_0 == receiver.IsValid());
assume true && receiver.IsValid() && argument_132_0_0 in receiver.D && argument_132_0_1 in receiver.D && argument_132_0_1 != argument_132_0_0 && argument_132_0_1 in receiver.C;
receiver.DeleteDevice(argument_132_0_0, argument_132_0_1);
assert {:keepAssertion} !(formal_0_7_0 == receiver.IsValid());}
2024-09-25 05:01:03.6931 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_7_0: bool, argument_132_0_0: int, argument_132_0_1: int, receiver: Database)
      modifies receiver
    {
      assume !(formal_0_7_0 == receiver.IsValid());
      assume true && receiver.IsValid() && argument_132_0_0 in receiver.D && argument_132_0_1 in receiver.D && argument_132_0_1 != argument_132_0_0 && argument_132_0_1 in receiver.C;
      receiver.DeleteDevice(argument_132_0_0, argument_132_0_1);
      assert {:keepAssertion} !(formal_0_7_0 == receiver.IsValid());
    }
2024-09-25 05:01:03.9154 TRACE Verifying the body of the following method:
static method synthesized(formal_0_7_0: bool, argument_133_0_0: int, argument_133_0_1: int, receiver: Database)
    modifies receiver {assume formal_0_7_0 == receiver.IsValid();
assume true && receiver.IsValid() && argument_133_0_0 in receiver.D && argument_133_0_1 in receiver.D && argument_133_0_1 != argument_133_0_0 && argument_133_0_1 in receiver.C;
receiver.DeleteDevice(argument_133_0_0, argument_133_0_1);
assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());}
2024-09-25 05:01:03.9154 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_7_0: bool, argument_133_0_0: int, argument_133_0_1: int, receiver: Database)
      modifies receiver
    {
      assume formal_0_7_0 == receiver.IsValid();
      assume true && receiver.IsValid() && argument_133_0_0 in receiver.D && argument_133_0_1 in receiver.D && argument_133_0_1 != argument_133_0_0 && argument_133_0_1 in receiver.C;
      receiver.DeleteDevice(argument_133_0_0, argument_133_0_1);
      assert {:keepAssertion} !!(formal_0_7_0 == receiver.IsValid());
    }
