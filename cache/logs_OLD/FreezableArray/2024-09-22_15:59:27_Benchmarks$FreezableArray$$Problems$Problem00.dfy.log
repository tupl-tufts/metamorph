2024-09-22 15:59:28.3851 DEBUG Using integer programming to estimating the distance to |this.data| == 0
2024-09-22 15:59:28.4008 TRACE Minimizing value: ((Put + Freeze) + Unfreeze)
2024-09-22 15:59:28.4042 DEBUG The integer programming gives the lower bound of 0 methods.
2024-09-22 15:59:28.4042 DEBUG In particular, need at least -0 calls to Put
2024-09-22 15:59:28.4042 DEBUG In particular, need at least -0 calls to Freeze
2024-09-22 15:59:28.4042 DEBUG In particular, need at least -0 calls to Unfreeze
2024-09-22 15:59:28.4042 INFO Initial heuristic value is 0
2024-09-22 15:59:28.4042 INFO Expanding method sequence  -- estimated distance to start = 0, distance to end = 0
2024-09-22 15:59:28.4467 TRACE Verifying the body of the following method:
static method synthesized(formal_0_107_0: int, argument_1_0_0: nat) returns (receiver: Array) {assume true;
receiver := new Array(argument_1_0_0);
assert {:keepAssertion} !(|receiver.data| == 0);}
2024-09-22 15:59:28.4467 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_107_0: int, argument_1_0_0: nat) returns (receiver: Array)
    {
      assume true;
      receiver := new Array(argument_1_0_0);
      assume {:formal} formal_0_107_0 == 0;
      assert {:keepAssertion} !(|receiver.data| == formal_0_107_0);
    }
2024-09-22 15:59:29.5229 TRACE Verifying the body of the following method:
static method synthesized(formal_0_107_0: int, argument_1_0_0: nat, formal_0_109_0: int) returns (receiver: Array) {assume true;
receiver := new Array(0);
assert {:keepAssertion} |receiver.data| == 0;}
2024-09-22 15:59:29.5229 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_107_0: int, argument_1_0_0: nat, formal_0_109_0: int)
        returns (receiver: Array)
    {
      assume {:formal} formal_0_109_0 == 0;
      assume {:attribute 5} argument_1_0_0 == formal_0_109_0;
      assume true;
      receiver := new Array(argument_1_0_0);
      assume {:formal} formal_0_107_0 == 0;
      assert {:keepAssertion} |receiver.data| == formal_0_107_0;
    }
2024-09-22 15:59:29.7537 INFO Have found the following solution to a subproblem!
{
result := new Array(0);
}
2024-09-22 15:59:29.7551 INFO Time spend on subproblem: 00:00:01.3807347
2024-09-22 15:59:29.7551 INFO Number of Regular queries to Dafny used to solve subproblem: 2 (00:00:01.3201148)
2024-09-22 15:59:29.7551 INFO Number of Simplify queries to Dafny used to solve subproblem: 0 (00:00:00)
2024-09-22 15:59:29.7551 INFO Number of Heuristic queries to Dafny used to solve subproblem: 0 (00:00:00)
2024-09-22 15:59:29.7551 INFO Have found the following solution!
static method solution() returns (result:Array)
ensures Goal(result)
{
result := new Array(0);
}
2024-09-22 15:59:29.7551 INFO Total time spend on synthesis: 00:00:01.5344112
2024-09-22 15:59:29.7551 INFO Total number of Regular queries to Dafny: 2 (00:00:01.3201148)
2024-09-22 15:59:29.7551 INFO Total number of Simplify queries to Dafny: 0 (00:00:00)
2024-09-22 15:59:29.7551 INFO Total number of Heuristic queries to Dafny: 0 (00:00:00)

********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
****************** SKIPPING -147 LINES OF LOGS TO SAVE DISK SPACE **************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************

2024-09-22 15:59:28.3851 DEBUG Using integer programming to estimating the distance to |this.data| == 0
2024-09-22 15:59:28.4008 TRACE Minimizing value: ((Put + Freeze) + Unfreeze)
2024-09-22 15:59:28.4042 DEBUG The integer programming gives the lower bound of 0 methods.
2024-09-22 15:59:28.4042 DEBUG In particular, need at least -0 calls to Put
2024-09-22 15:59:28.4042 DEBUG In particular, need at least -0 calls to Freeze
2024-09-22 15:59:28.4042 DEBUG In particular, need at least -0 calls to Unfreeze
2024-09-22 15:59:28.4042 INFO Initial heuristic value is 0
2024-09-22 15:59:28.4042 INFO Expanding method sequence  -- estimated distance to start = 0, distance to end = 0
2024-09-22 15:59:28.4467 TRACE Verifying the body of the following method:
static method synthesized(formal_0_107_0: int, argument_1_0_0: nat) returns (receiver: Array) {assume true;
receiver := new Array(argument_1_0_0);
assert {:keepAssertion} !(|receiver.data| == 0);}
2024-09-22 15:59:28.4467 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_107_0: int, argument_1_0_0: nat) returns (receiver: Array)
    {
      assume true;
      receiver := new Array(argument_1_0_0);
      assume {:formal} formal_0_107_0 == 0;
      assert {:keepAssertion} !(|receiver.data| == formal_0_107_0);
    }
2024-09-22 15:59:29.5229 TRACE Verifying the body of the following method:
static method synthesized(formal_0_107_0: int, argument_1_0_0: nat, formal_0_109_0: int) returns (receiver: Array) {assume true;
receiver := new Array(0);
assert {:keepAssertion} |receiver.data| == 0;}
2024-09-22 15:59:29.5229 TRACE Verifying the body of the following method (literal):
 static method synthesized(formal_0_107_0: int, argument_1_0_0: nat, formal_0_109_0: int)
        returns (receiver: Array)
    {
      assume {:formal} formal_0_109_0 == 0;
      assume {:attribute 5} argument_1_0_0 == formal_0_109_0;
      assume true;
      receiver := new Array(argument_1_0_0);
      assume {:formal} formal_0_107_0 == 0;
      assert {:keepAssertion} |receiver.data| == formal_0_107_0;
    }
2024-09-22 15:59:29.7537 INFO Have found the following solution to a subproblem!
{
result := new Array(0);
}
2024-09-22 15:59:29.7551 INFO Time spend on subproblem: 00:00:01.3807347
2024-09-22 15:59:29.7551 INFO Number of Regular queries to Dafny used to solve subproblem: 2 (00:00:01.3201148)
2024-09-22 15:59:29.7551 INFO Number of Simplify queries to Dafny used to solve subproblem: 0 (00:00:00)
2024-09-22 15:59:29.7551 INFO Number of Heuristic queries to Dafny used to solve subproblem: 0 (00:00:00)
2024-09-22 15:59:29.7551 INFO Have found the following solution!
static method solution() returns (result:Array)
ensures Goal(result)
{
result := new Array(0);
}
2024-09-22 15:59:29.7551 INFO Total time spend on synthesis: 00:00:01.5344112
2024-09-22 15:59:29.7551 INFO Total number of Regular queries to Dafny: 2 (00:00:01.3201148)
2024-09-22 15:59:29.7551 INFO Total number of Simplify queries to Dafny: 0 (00:00:00)
2024-09-22 15:59:29.7551 INFO Total number of Heuristic queries to Dafny: 0 (00:00:00)
